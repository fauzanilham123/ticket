{
    "swagger": "2.0",
    "info": {
        "description": "This is an API documentation for hepytic.",
        "title": "hepytic",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/v1",
    "paths": {
        "/auth/customer/login": {
            "post": {
                "description": "Login Customer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login Customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.User"
                            }
                        }
                    }
                }
            }
        },
        "/auth/customer/register": {
            "post": {
                "description": "Register Customer with the given information",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register Customer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "password",
                        "name": "password",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "gender",
                        "name": "gender",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "birthday",
                        "name": "birthday",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "phone_number",
                        "name": "phone_number",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.User"
                        }
                    }
                }
            }
        },
        "/banners/": {
            "get": {
                "description": "Retrieve a list of all banners",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banners"
                ],
                "summary": "Get all banners",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order_by",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by title",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Banner"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new banner with the given information",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banners"
                ],
                "summary": "Create a new banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "title of the banner",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "slug of the banner",
                        "name": "slug",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "desc of the banner",
                        "name": "desc",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image file to upload",
                        "name": "img",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Banner"
                        }
                    }
                }
            }
        },
        "/banners/{id}": {
            "get": {
                "description": "Retrieve a banner by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banners"
                ],
                "summary": "Get a banner by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Banner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Banner"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a banner by its ID",
                "tags": [
                    "banners"
                ],
                "summary": "Delete a banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Banner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a banner by its ID",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "banners"
                ],
                "summary": "Update a banner",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Banner ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "title of the banner",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "slug of the banner",
                        "name": "slug",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "desc of the banner",
                        "name": "desc",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Image file to upload",
                        "name": "img",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Banner"
                        }
                    }
                }
            }
        },
        "/events/": {
            "get": {
                "description": "Retrieve a list of all events",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get all events",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order_by",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by id_talent",
                        "name": "id_talent",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by title",
                        "name": "title",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by desc",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by location",
                        "name": "location",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by sk",
                        "name": "sk",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by tag",
                        "name": "tag",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by id_promotor_created",
                        "name": "id_promotor_created",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Event"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new event with the given information",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Create a new event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id_talent of the event",
                        "name": "id_talent",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "title of the event",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "desc of the event",
                        "name": "desc",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "date of the event",
                        "name": "date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "location of the event",
                        "name": "location",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sk of the event",
                        "name": "sk",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "tag of the event",
                        "name": "tag",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id_promotor_created of the event",
                        "name": "id_promotor_created",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "img_layout file to upload",
                        "name": "img_layout",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Event"
                        }
                    }
                }
            }
        },
        "/events/{id}": {
            "get": {
                "description": "Retrieve a event by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get a event by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Event"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a event by its ID",
                "tags": [
                    "events"
                ],
                "summary": "Delete a event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a event by its ID",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Update a event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id_talent of the event",
                        "name": "id_talent",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "title of the event",
                        "name": "title",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "desc of the event",
                        "name": "desc",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "format": "date",
                        "description": "date of the event",
                        "name": "date",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "location of the event",
                        "name": "location",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sk of the event",
                        "name": "sk",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "tag of the event",
                        "name": "tag",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id_promotor_created of the event",
                        "name": "id_promotor_created",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "img_layout file to upload",
                        "name": "img_layout",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Event"
                        }
                    }
                }
            }
        },
        "/talents/": {
            "get": {
                "description": "Retrieve a list of all talents",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "talents"
                ],
                "summary": "Get all talents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "offset",
                        "name": "offset",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "order_by",
                        "name": "order_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "sort",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter by id_promotor_created",
                        "name": "id_promotor_created",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.Talent"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new talent with the given information",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "talents"
                ],
                "summary": "Create a new talent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name of the talent",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id_promotor_created of the talent",
                        "name": "id_promotor_created",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "poto file to upload",
                        "name": "photo",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Talent"
                        }
                    }
                }
            }
        },
        "/talents/{id}": {
            "get": {
                "description": "Retrieve a talent by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "talents"
                ],
                "summary": "Get a talent by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Talents ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Talent"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a talent by its ID",
                "tags": [
                    "talents"
                ],
                "summary": "Delete a talent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Talent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "patch": {
                "description": "Update a talent by its ID",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "talents"
                ],
                "summary": "Update a talent",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Talent ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name of the talent",
                        "name": "name",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id_promotor_created of the talent",
                        "name": "id_promotor_created",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "photo file to upload",
                        "name": "photo",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.Talent"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.Banner": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "img": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Event": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "desc": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "id_promotor_created": {
                    "type": "integer"
                },
                "id_talent": {
                    "type": "string"
                },
                "img_layout": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "sk": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.Talent": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "id_promotor_created": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "photo": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "entity.User": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "id_customer": {
                    "type": "integer"
                },
                "id_promotor": {
                    "type": "integer"
                },
                "id_type": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "token": {
                    "description": "field token",
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}